{"version":3,"sources":["components/Categories.js","components/NewsItem.js","components/NewsList.js","pages/NewsPage.js","App.js","reportWebVitals.js","index.js"],"names":["categories","name","text","CategoriesBlock","styled","div","Category","NavLink","Categories","map","c","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","useState","articles","setArticles","loading","setLoading","useEffect","fetchData","a","query","axios","get","response","data","console","log","NewsPage","match","params","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mNAIMA,EAAa,CACf,CAACC,KAAM,MAAOC,KAAM,YACpB,CAACD,KAAM,WAAYC,KAAM,YACzB,CAACD,KAAM,gBAAiBC,KAAM,iBAC9B,CAACD,KAAM,SAAUC,KAAM,UACvB,CAACD,KAAM,UAAWC,KAAM,WACxB,CAACD,KAAM,SAAUC,KAAM,UACvB,CAACD,KAAM,aAAcC,KAAM,eAGzBC,EAAkBC,IAAOC,IAAV,kNAWfC,EAAWF,YAAOG,IAAPH,CAAH,ucA0CCI,EAjBI,WACf,OACI,cAACL,EAAD,UAEQH,EAAWS,KAAI,SAAAC,GAAC,OACZ,cAACJ,EAAD,CACAK,gBAAgB,SAChBC,MAAkB,QAAXF,EAAET,KACTY,GAAe,QAAXH,EAAET,KAAiB,IAAnB,WAA6BS,EAAET,MAHnC,SAIKS,EAAER,MAJQQ,EAAET,Y,kDCnD/Ba,EAAgBV,IAAOC,IAAV,yqBAwDJU,EAxBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACTC,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,YAAaC,EAAmBH,EAAnBG,IAAKC,EAAcJ,EAAdI,WAEhC,OACI,eAACN,EAAD,WACKM,GACG,qBAAKC,UAAU,YAAf,SACI,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACI,qBAAKC,IAAKL,EAAYM,IAAI,kBAItC,sBAAKL,UAAU,WAAf,UACI,6BACI,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACKP,MAGT,4BAAIC,WChDdS,EAAgBvB,IAAOC,IAAV,4PAoDJuB,EAvCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAhBAC,qBAAU,WACN,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,6DACdH,GAAW,GADG,SAGJI,EAAqB,QAAbT,EAAqB,GAArB,oBAAuCA,GAH3C,SAIaU,IAAMC,IAAN,yDAA4DF,EAA5D,6CAJb,OAIJG,EAJI,OAMVT,EAAYS,EAASC,KAAKX,UANhB,gDAQVY,QAAQC,IAAR,MARU,QAUdV,GAAW,GAVG,yDAAH,qDAYfE,MACD,CAACP,IAEAI,EACO,cAACN,EAAD,yBAGNI,EAKD,cAACJ,EAAD,UAEQI,EAAStB,KAAI,SAAAO,GAAO,OAChB,cAAC,EAAD,CAA6BA,QAASA,GAAvBe,EAASZ,UAP7B,MC5BA0B,EAZE,SAAC,GAAa,IAErBhB,EAFoB,EAAXiB,MAEQC,OAAOlB,UAAY,MAE1C,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAUA,SAAUA,QCHjBmB,EAJH,WACV,OAAQ,cAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWL,KCOhCM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.02805e8b.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {NavLink} from 'react-router-dom'\n\nconst categories = [\n    {name: 'all', text: 'View all'},\n    {name: 'business', text: 'BUSINESS'},\n    {name: 'entertainment', text: 'ENTERTAINMENT'},\n    {name: 'health', text: 'HEALTH'},\n    {name: 'science', text: 'SCIENCE'},\n    {name: 'sports', text: 'SPORTS'},\n    {name: 'technology', text: 'TECHNOLOGY'},\n]\n\nconst CategoriesBlock = styled.div`\n    display: flex;\n    padding: 1rem;\n    width: 768px;\n    margin: 0 auto;\n\n    @media screen and (max-width: 768px) {\n        width: 100%;\n        overflow-x: auto;\n    }\n`\nconst Category = styled(NavLink)`\n    font-size: 1.125rem;\n    cursor: pointer;\n    white-space: pre;\n    text-decoration: none;\n    color: inherit;\n    padding-bottom: .25rem;\n\n    &:hover {\n        color: #495057;\n    }\n\n    &.active {\n        font-weight: 600;\n        border-bottom: 2px solid #22b8cf;\n        color: #22b8cf;\n        &:hover {\n            color: #ebc9db;\n        }\n    }\n\n    & + & {\n        margin-left: 1rem;\n    }\n`\nconst Categories = () => {\n    return (\n        <CategoriesBlock>\n            {\n                categories.map(c=> (\n                    <Category key={c.name}\n                    activeClassName=\"active\"\n                    exact={c.name === 'all'}\n                    to={c.name === 'all' ? '/' : `/${c.name}`}>\n                        {c.text}\n                    </Category>\n                ))\n            }\n        </CategoriesBlock>\n    );\n};\n\nexport default Categories;","// 각 뉴스의 정보\nimport React from 'react';\nimport styled from 'styled-components'\n\nconst NewsItemBlock = styled.div`\n    display: flex;\n\n        .thumbnail {\n            margin-right: 1rem;\n            img {\n                display: block;\n                width: 160px;\n                height: 100px;\n                object-fit: cover;\n            }\n        }\n        .contents {\n            h2 {\n                margin: 0;\n                a {\n                    color: black;\n                }\n            }\n            p {\n                margin: 0;\n                line-height: 1.5;\n                margin-top: .5rem;\n                white-space: normal\n            }\n        }\n        & + & {\n            margin-top: 3rem;\n        }\n    `;\n\n\nconst NewsItem = ({ article }) => {\n    const {title, description, url, urlToImage} = article \n\n    return (\n        <NewsItemBlock>\n            {urlToImage && (\n                <div className=\"thumbnail\">\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={urlToImage} alt=\"thumbnail\"/>\n                    </a>\n                </div>\n            )}\n            <div className=\"contents\">\n                <h2>\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {title}\n                    </a>\n                </h2>\n                <p>{description}</p>\n            </div>\n        </NewsItemBlock>\n    );\n};\n\nexport default NewsItem;","// API 요청, 뉴스 데이터 배열 변환\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport NewsItem from './NewsItem';\n\nconst NewsListBlock = styled.div`\n    box-sizing: border-box;\n    padding-bottom: 3rem;\n    width: 768px;\n    margin: 0 auto;\n    margin-top: 2rem;\n    \n    @media screen and (max-width: 768px) {\n        width: 100%;\n        padding: 0 1rem;\n    }\n`\n\nconst NewsList = ({ category }) => {\n\n    const [articles, setArticles] = useState(null)\n    const [loading, setLoading] = useState(false)\n    useEffect(()=> {\n        const fetchData = async () => {\n            setLoading(true)\n            try {\n                const query = category === 'all' ? '' : `&category=${category}`\n                const response = await axios.get(`https://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=c2e5ae113eb541cfbcf02f124cdeab1b`,\n                )\n                setArticles(response.data.articles)\n            } catch(e) {\n                console.log(e)\n            }\n            setLoading(false)\n        }\n        fetchData()\n    }, [category])\n    // Loading \n    if (loading) {\n        return <NewsListBlock>Loading...</NewsListBlock>\n    }\n    // articles 값이 설정되지 않았을 때\n    if (!articles) {\n        return null\n    }\n    // articles 값이 있을 때\n    return (\n        <NewsListBlock>\n            {\n                articles.map(article => (\n                    <NewsItem key={articles.url} article={article}/>\n                ))\n            }\n        </NewsListBlock>\n    );\n};\n\nexport default NewsList;","import React from 'react';\nimport Categories from '../components/Categories';\nimport NewsList from '../components/NewsList';\n\nconst NewsPage = ({match}) => {\n    // 카테고리가 선택되지 않으면 기본값인 all 사용\n    const category = match.params.category || 'all'\n\n    return (\n        <>\n            <Categories />\n            <NewsList category={category} />\n        </>\n    );\n};\n\nexport default NewsPage;","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport NewsPage from './pages/NewsPage';\n\nconst App = () => {\n  return  <Route path=\"/:category?\" component={NewsPage} />\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}